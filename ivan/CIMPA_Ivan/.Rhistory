scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(mosquito_pupae) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
ggplot(aes(x = reorder(mosquito_pupae, Total, decreasing = F), y = Total)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Registros con pupas",
y = "Total",
x = NULL
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(mosquito_pupae) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
ggplot(aes(x = reorder(mosquito_pupae, Total, decreasing = T), y = Total)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Registros con pupas",
y = "Total",
x = NULL
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(species) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
ggplot(aes(x = reorder(species, Total, decreasing = F), y = Total, fill = species)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Registros con huevos de mosquitos",
y = "Total",
x = NULL
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(species) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
ggplot(aes(x = reorder(species, Total, decreasing = F), y = Total, fill = species)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Registros con huevos de mosquitos",
y = "Total",
x = NULL,
fill = "Especie"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(species) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
ggplot(aes(x = reorder(species, Total, decreasing = F), y = Total, fill = species)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
y = "Total",
x = NULL,
fill = "Especie"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(genus) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
ggplot(aes(x = reorder(genus, Total, decreasing = F), y = Total, fill = species)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
y = "Total",
x = NULL,
fill = "Especie"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(genus) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
ggplot(aes(x = reorder(genus, Total, decreasing = F), y = Total, fill = genus)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
y = "Total",
x = NULL,
fill = "Especie"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(genus) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
ggplot(aes(x = reorder(genus, Total, decreasing = F), y = Total, fill = genus)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
y = "Total",
x = NULL,
fill = "Especie"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(genus) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10)
df1 %>%
group_by(genus) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
ggplot(aes(x = reorder(genus, Total, decreasing = F), y = Total, fill = genus)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
subtitle = "Se omitieron los valores vacíos NA (39,373)"
y = "Total",
df1 %>%
group_by(genus) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
ggplot(aes(x = reorder(genus, Total, decreasing = F), y = Total, fill = genus)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
subtitle = "Se omitieron los valores vacíos NA (39,373)",
y = "Total",
x = NULL,
fill = "Especie"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(genus) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
ggplot(aes(x = reorder(genus, Total, decreasing = F), y = Total, fill = genus)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
subtitle = "Se omitieron los valores vacíos NA (39,373)",
y = "Total",
x = NULL,
fill = "Género"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(mosquito_adults) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
ggplot(aes(x = reorder(mosquito_adults, Total, decreasing = F), y = Total, fill = mosquito_adults)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
subtitle = "Se omitieron los valores vacíos NA (39,373)",
y = "Total",
x = NULL,
fill = "Género"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(mosquito_adults) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10)
df1 %>%
group_by(genus) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
ggplot(aes(x = reorder(genus, Total, decreasing = F), y = Total, fill = genus)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
subtitle = "Se omitieron los valores vacíos NA (39,373)",
y = "Total",
x = NULL,
fill = "Género"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(mosquito_adults) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
ggplot(aes(x = reorder(mosquito_adults, Total, decreasing = F), y = Total, fill = mosquito_adults)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
subtitle = "Se omitieron los valores vacíos NA (39,373)",
y = "Total",
x = NULL,
fill = "Género"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(mosquito_adults) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10)
df1 %>%
group_by(mosquito_adults) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
ggplot(aes(x = reorder(mosquito_adults, Total, decreasing = F), y = Total, fill = mosquito_adults)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
subtitle = "Se omitieron los valores vacíos NA (26,487)",
y = "Total",
x = NULL,
fill = "Género"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(mosquito_adults) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
mutate(
mosquito_adults = case_when(
mosquito_adults == TRUE ~ "Sí",
TRUE~"nO"
)
)
df1 %>%
group_by(mosquito_adults) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
mutate(
mosquito_adults = case_when(
mosquito_adults == TRUE ~ "Sí, es adulto",
TRUE ~ "No, no es adulto"
)
)
df1 %>%
group_by(mosquito_adults) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
mutate(
mosquito_adults = case_when(
mosquito_adults == TRUE ~ "Sí, es adulto",
TRUE ~ "No, no es adulto"
)
) %>%
ggplot(aes(x = reorder(mosquito_adults, Total, decreasing = F), y = Total, fill = mosquito_adults)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
subtitle = "Se omitieron los valores vacíos NA (26,487)",
y = "Total",
x = NULL,
fill = "Género"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(mosquito_adults) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
mutate(
mosquito_adults = case_when(
mosquito_adults == TRUE ~ "Sí, es adulto",
TRUE ~ "No es adulto"
)
) %>%
ggplot(aes(x = reorder(mosquito_adults, Total, decreasing = F), y = Total, fill = mosquito_adults)) +
geom_bar(stat = "identity") +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
subtitle = "Se omitieron los valores vacíos NA (26,487)",
y = "Total",
x = NULL,
fill = "Género"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
df1 %>%
group_by(mosquito_adults) %>%
summarise(
Total = n()
) %>%
arrange(desc(Total)) %>%
head(10) %>%
na.omit() %>%
mutate(
mosquito_adults = case_when(
mosquito_adults == TRUE ~ "Sí, es adulto",
TRUE ~ "No es adulto"
)
) %>%
ggplot(aes(x = reorder(mosquito_adults, Total, decreasing = F), y = Total, fill = mosquito_adults)) +
geom_bar(stat = "identity", show.legend = F) +
geom_text(aes(label = scales::comma(Total)), vjust = -0.5, size = 3.5) +
labs(
title = "Cantidad de observaciones por género del mosquito",
subtitle = "Se omitieron los valores vacíos NA (26,487)",
y = "Total",
x = NULL,
fill = "Género"
) +
theme_minimal() +
scale_y_continuous(
labels = comma_format()
)
---
title: "Definición de Variables"
library(knitr)
# Crear el dataframe
data <- data.frame(
Variable = c("measurement latitude", "measurement longitude", "measurement elevations", "data source", "water source type", "water source",
"larvae count", "mosquito eggs", "mosquito egg count", "mosquito pupae", "mosquito adults", "last identify stage",
"genus", "species", "breeding ground eliminated", "extra data", "water source photo urls", "larva full body photo urls",
"abdomen closeup photo urls", "comments", "location method", "location accuracy (m)"),
`Units / Format` = c("decimal degrees north", "decimal degrees east", "meters (m) above sea level", "n/a", "n/a", "n/a",
"n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "meters (m)"),
Definition = c("Latitude recorded by the GPS of a participant using the GLOBE Observer app at the time of measurement. Range: [-90,90]. Note: See also “latitude”.",
"Longitude recorded by the GPS of a participant using the GLOBE Observer app at the time of measurement. Note: See also “longitude”.",
"Elevation at the latitude/longitude location recorded by the GPS of a participant using the GLOBE Observer app at the time of measurement. Note: See also “elevation”.",
"Indicates if the data was entered via the GLOBE Observer App (currently, that is the only option).",
"High-level classification of the mosquito habitat type. Options: [container: artificial, container: natural, flowing: still water found next to river or stream, still: lake/pond/swamp].",
"Further classification of the mosquito habitat type. Options: [can, bottle, pond, cistern].",
"Number (integer) of mosquito larvae present.",
"Are mosquito eggs present? Options: [TRUE, FALSE].",
"This field is currently not used.",
"Are mosquito pupae present? Options : [TRUE (t), FALSE (f)].",
"Are adult mosquitoes present? Options: [TRUE (t), FALSE (f)].",
"Flag indicating the last identification stage a user completed in the Mosquito Habitat Mapper tool in the GLOBE Observer mobile app.",
"Genus of the mosquitoes Options: [Aedes, Anopheles, Culex]. Note: This is unvalidated data submitted by citizen scientists and should be validated by scientists through examination of associated voucher photographs.",
"Species of the mosquitoes (e.g., aegypti, albopictus). Note: This is unvalidated data submitted by citizen scientists and should be validated by scientists through examination of associated voucher photographs.",
"Was the breeding ground eliminated? Options : [TRUE (t), FALSE (f)].",
"Optional entry if user wants to report the presence of a mosquito species that is not part of the prompts in the GLOBE Observer mobile app.",
"URL of the mosquito water source photo.",
"URL of the mosquito full body photo.",
"URL for the mosquito abdomen photo.",
"Comments about the mosquito observation.",
"Indicates if the measurement location was determined automatically by device GPS or entered manually.",
"For locations determined by device GPS, this is the estimate of accuracy within “n” meters.")
)
# Mostrar la tabla
kable(data, format = "html", table.attr = "class='table table-striped'")
library(knitr)
# Crear el dataframe
data <- data.frame(
Variable = c("measurement latitude", "measurement longitude", "measurement elevations", "data source", "water source type", "water source",
"larvae count", "mosquito eggs", "mosquito egg count", "mosquito pupae", "mosquito adults", "last identify stage",
"genus", "species", "breeding ground eliminated", "extra data", "water source photo urls", "larva full body photo urls",
"abdomen closeup photo urls", "comments", "location method", "location accuracy (m)"),
`Units / Format` = c("decimal degrees north", "decimal degrees east", "meters (m) above sea level", "n/a", "n/a", "n/a",
"n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "n/a", "meters (m)"),
Definition = c("Latitud registrada por el GPS de un participante usando la aplicación GLOBE Observer en el momento de la medición. Rango: [-90,90]. Nota: ver también “latitud”.",
"Longitud registrada por el GPS de un participante usando la aplicación GLOBE Observer en el momento de la medición. Nota: ver también “longitud”.",
"Elevación en la ubicación de latitud/longitud registrada por el GPS de un participante usando la aplicación GLOBE Observer en el momento de la medición. Nota: ver también “elevación”.",
"Indica si los datos fueron ingresados mediante la aplicación GLOBE Observer (actualmente, es la única opción).",
"Clasificación de alto nivel del tipo de hábitat de mosquitos. Opciones: [contenedor: artificial, contenedor: natural, flujo: agua estancada encontrada junto a río o arroyo, estancado: lago/estanque/pantano].",
"Clasificación adicional del tipo de hábitat de mosquitos. Opciones: [lata, botella, estanque, cisterna].",
"Número (entero) de larvas de mosquito presentes.",
"¿Hay huevos de mosquitos presentes? Opciones: [VERDADERO, FALSO].",
"Este campo actualmente no se utiliza.",
"¿Hay pupas de mosquito presentes? Opciones: [VERDADERO (t), FALSO (f)].",
"¿Hay mosquitos adultos presentes? Opciones: [VERDADERO (t), FALSO (f)].",
"Indicador de la última etapa de identificación que completó un usuario en la herramienta Mosquito Habitat Mapper de la aplicación móvil GLOBE Observer.",
"Género de los mosquitos. Opciones: [Aedes, Anopheles, Culex]. Nota: estos son datos no validados enviados por científicos ciudadanos y deberían ser validados por científicos a través de la examinación de fotografías asociadas.",
"Especie de los mosquitos (e.g., aegypti, albopictus). Nota: estos son datos no validados enviados por científicos ciudadanos y deberían ser validados por científicos a través de la examinación de fotografías asociadas.",
"¿Fue eliminado el lugar de cría? Opciones: [VERDADERO (t), FALSO (f)].",
"Entrada opcional si el usuario desea reportar la presencia de una especie de mosquito que no es parte de las opciones en la aplicación móvil GLOBE Observer.",
"URL de la foto de la fuente de agua de los mosquitos.",
"URL de la foto completa del cuerpo de la larva de mosquito.",
"URL para la foto del abdomen del mosquito.",
"Comentarios sobre la observación del mosquito.",
"Indica si la ubicación de la medición fue determinada automáticamente por el GPS del dispositivo o ingresada manualmente.",
"Para ubicaciones determinadas por el GPS del dispositivo, esta es la estimación de precisión dentro de 'n' metros.")
)
# Mostrar la tabla
kable(data, format = "html", table.attr = "class='table table-striped'")
setwd("C:/Users/Ivan RC/Desktop/OneDrive - Universidad de Costa Rica/CIMPA_Ivan/3. Codes")
